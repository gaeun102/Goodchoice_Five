<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="acomodation">
		 
	<select id="getAvailableRoomId" parameterType="HashMap" resultType="String">
		WITH SEARCH_ROOM AS(
		    select ROOM.room_id
		    from 
		        tbl_acom_category CAT
		        JOIN tbl_spec SP ON CAT.category_no = SP.fk_category_no
		        JOIN tbl_acomodation ACOM ON SP.spec_no = ACOM.fk_spec_no
		        JOIN tbl_room ROOM on ACOM.acom_no = ROOM.fk_acom_no
		    where
		        ACOM.is_acom_permission = 1
		        AND CAT.category_no = #{category_no}
		        AND ACOM.fk_district_no = #{district_no}
		    order by 1
		)
		select SR.room_id
		from SEARCH_ROOM SR
		LEFT JOIN tbl_reservation RES ON RES.fk_room_id = SR.room_id
		AND(
		        (check_in_date BETWEEN RES.check_in_date AND (RES.check_out_date - 1))
		        OR (check_out_date + 1 BETWEEN (RES.check_in_date + 1) AND RES.check_out_date)
		    )
		WHERE
		    RES.fk_room_id IS NULL
		order by 1			
	</select>
	
	
	<select id="getPriceFilterRoomId" parameterType="HashMap" resultType="String">
		
		select room_id
		from 
		    tbl_room
		where 1=1 
			<if test="availableRoomIdList != null">
				and room_id in
				<foreach collection="availableRoomIdList" index="i" open="(" separator="," close=")">
					'${availableRoomIdList.get(i)}'
				</foreach>
			</if>
		<if test="max_price eq -1"> 
		and price >= 10000
		</if>
		
		<if test="max_price neq -1">
		and (price between to_number(#{min_price}) and to_number(#{max_price}))
		</if>
			
	</select>
	

	<resultMap type="HashMap" id="getAcomListByRowPrice_Map">
		<result property="acom_no" 	 	column="acom_no" 	  javaType="String"/>
		<result property="price" 		column="price" 		  javaType="String"/>
	</resultMap>

	<select id="getAcomListByRowPrice" parameterType="HashMap" resultMap="getAcomListByRowPrice_Map">
		select  acom_no, min(to_number(price)) as price
	        from tbl_acomodation ACOM
	        JOIN tbl_room ROOM on ACOM.acom_no = ROOM.fk_acom_no
        where 1=1 
        	<if test="availableRoomIdList != null">
				and room_id in
				<foreach collection="availableRoomIdList" index="i" open="(" separator="," close=")">
					'${availableRoomIdList.get(i)}'
				</foreach>
			</if>
        group by acom_no
	</select>

	

	
	<select id="getAcomListByfacilties" parameterType="HashMap" resultType="String">	
		select fk_acom_no as acom_no
			from 
			(
			    select fk_acom_no, category_fac_no
			        from tbl_category_facilities CF
			        JOIN tbl_facilities FAC on CF.category_fac_no = FAC.fk_category_fac_no
			    where fk_acom_no in 
				<foreach collection="acomSearchList" item="item" open="(" separator="," close=")">
					#{item.acom_no}
				</foreach>
			    group by fk_acom_no, category_fac_no
			 )
			 where category_fac_no in 
				<foreach collection="arr_fac_no" index="i" open="(" separator="," close=")">
					'${arr_fac_no[i]}'
				</foreach>
			 group by fk_acom_no
			 having count(distinct category_fac_no) = #{arrFacLen}
	</select>
	
	
	<resultMap type="HashMap" id="getRatingReviewCntByAcom_Map">
		<result property="acom_no" 	 	column="acom_no" 	javaType="String"/>
		<result property="rating_avg" 	column="rating_avg" javaType="String"/>
		<result property="rating_cnt"   column="rating_cnt" javaType="String"/>
	</resultMap>
	
	<select id="getRatingReviewCntByAcom" parameterType="java.util.List" resultMap="getRatingReviewCntByAcom_Map">

	    select acom_no, nvl(avg(review_score),'0') AS rating_avg, count(review_score) rating_cnt
	    from
	    (
	        select *
	        from tbl_acomodation ACOM
	        JOIN tbl_room ROOM on ACOM.acom_no = ROOM.fk_acom_no
	        where	        
				ROOM.fk_acom_no in 

				<foreach collection="list" item="item" open="(" separator="," close=")">
					#{item.acom_no}
				</foreach>

	        
	    )ABR
	    LEFT JOIN tbl_review REV on ABR.room_id = REV.fk_room_id
	    group by acom_no
	    
	</select>
	
	
	<resultMap type="HashMap" id="getSortedListByDistance_Map">
		<result property="acom_no" 	 	column="acom_no" 	javaType="String"/>
		<result property="distance" 	column="distance" 	javaType="String"/>
	</resultMap>
	
	<select id="getSortedListByDistance" parameterType="java.util.List" resultMap="getSortedListByDistance_Map">
				
		select acom_no
		      , trunc( (6371*acos(cos(radians(to_number(district_latitude)))*cos(radians(to_number(acom_latitude)))*cos(radians(to_number(acom_longitude))
		        -radians(to_number(district_longitude)))+sin(radians(to_number(district_latitude)))*sin(radians(to_number(acom_latitude))))) * 1000)
		      AS distance
		from 
		    tbl_district DST
		    JOIN tbl_acomodation ACOM on DST.district_no = ACOM.fk_district_no
		where ACOM.acom_no in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item.acom_no}
		</foreach>
		order by distance		
			
	</select>
	
	
	<resultMap type="HashMap" id="getNameAddressbyAcom_Map">
		<result property="acom_no" 	 	column="acom_no" 	javaType="String"/>
		<result property="acom_name" 	column="acom_name" javaType="String"/>
		<result property="address"  	column="address"   javaType="String"/>
	</resultMap>
	
	<select id="getNameAddressbyAcom" parameterType="java.util.List" resultMap="getNameAddressbyAcom_Map">

	   	select acom_no, acom_name, address || extra_address as address
			from tbl_acomodation
			where acom_no in 
			<foreach collection="list" item="item" open="(" separator="," close=")">
					#{item.acom_no}
			</foreach>				
				
	</select>
	
	
	
	


</mapper>
